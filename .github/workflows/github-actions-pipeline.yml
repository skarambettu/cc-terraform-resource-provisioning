# This is a basic workflow to help you get started with Actions

name: CI/CD with Terraform

on:
  push:
    branches:
      - main
      - develop
      - release/*

# Add permissions for OIDC token
permissions:
  contents: 'read'
  id-token: 'write'

jobs:
  terraform-plan:
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/main' && 'production' || github.ref == 'refs/heads/develop' && 'development' || 'staging' }}
    env:
      TF_VARS_FILE: qut.terraform.tfvars

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: 'Authenticate to Google Cloud'
        id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: 'projects/391245638390/locations/global/workloadIdentityPools/sandesh-pool/providers/github'
          service_account: 'sandesh-sa@solutionsarchitect-01.iam.gserviceaccount.com'

      # Your Terraform steps will now automatically use the credentials
      - name: setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false

      - name: Terraform Init - Dev
        if: github.ref == 'refs/heads/develop'
        run: terraform init -backend-config="backend-dev.tfvars"
        working-directory: ./terraform

      - name: Terraform Init - Staging
        if: startsWith(github.ref, 'refs/heads/release/')
        run: terraform init -backend-config="backend-staging.tfvars"
        working-directory: ./terraform

      - name: Terraform Init - Prod
        if: github.ref == 'refs/heads/main'
        run: terraform init -backend-config="backend-prod.tfvars"
        working-directory: ./terraform
        
      - name: Setup Terraform variables
        working-directory: ./terraform
        id: vars
        run: |
          cat > qut.terraform.tfvars <<EOF
          confluent_cloud_api_key = "${{ secrets.CONFLUENT_CLOUD_API_KEY }}"
          confluent_cloud_api_secret = "${{ secrets.CONFLUENT_CLOUD_API_SECRET }}"
          kafka_api_key = "${{ secrets.KAFKA_API_KEY }}"
          kafka_api_secret = "${{ secrets.KAFKA_API_SECRET }}"
          sr_api_key = "${{ secrets.SR_API_KEY }}"
          sr_api_secret = "${{ secrets.SR_API_SECRET }}"
          project_id = "${{ secrets.PROJECT_ID }}"
          region = "${{ secrets.REGION }}"
          EOF
          cat qut.terraform.tfvars
      - name: Terraform Plan
        id: plan
        run: |
          terraform plan -var-file=qut.terraform.tfvars -out=PLAN
        working-directory: ./terraform
      - name: Upload Terraform Plan
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: ./terraform/PLAN
          retention-days: 1

  terraform-apply:
    runs-on: ubuntu-latest
    needs: terraform-plan
    environment:
      name: dev
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false
      - name: Download Terraform Plan
        uses: actions/download-artifact@v4
        with:
          name: terraform-plan
          path: ./terraform
      - name: Terraform Apply
        id: apply
        run: terraform apply PLAN
        working-directory: ./terraform
